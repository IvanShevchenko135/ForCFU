#define _CRT_SECURE_NO_WARNINGS 
#include <iostream> 
#include <cstdlib> 
#include <stdio.h> 
#include <vector> 
#include <set> 
#include <fstream> 
#include <algorithm> 
#include <math.h> 
#include <queue> 
#include <iterator> 
using namespace std;


int main() {
	int x1, y1, x2, y2, x3, y3, x4, y4;
	double x, y, D, Dx, Dy;
	scanf("%d%d%d%d%d%d%d%d", &x1, &y1, &x2, &y2, &x3, &y3, &x4, &y4);
	D = -(y1 - y2) * (x4 - x3) + (y3 - y4) * (x2 - x1);
	Dx = (x1 * y2 - x2 * y1) * (x4 - x3) - (x3 * y4 - x4 * y3) * (x2 - x1);
	Dy = (y1 - y2) * (x3 * y4 - x4 * y3) - (y3 - y4) * (x1 * y2 - x2 * y1);

	if (D != 0) {
		x = Dx / D;
		y = Dy / D;
		printf("1 %.6lf %.6lf", x, y);
	}
	else if (D == 0 && Dx == 0 && Dy == 0) {
		printf("2");
	}
	else {
		printf("0");
	}
	return 0;
}
/*
Точка пересечения прямых
На плоскости даны две прямые. Каждая прямая задается парой точек, через которые она проходит.

Требуется установить, пересекаются ли эти прямые, и найти координаты точки пересечения.

Формат входных данных
Первая строка входных данных содержит четыре целых числа - координаты двух точек, через которые проходит первая прямая. Гарантируется, что эти две точки различны.

Вторая строка входных данных содержит координаты двух различных точек, через которые проходит вторая прямая. Точки, через которые проходит вторая прямая могут совпадать с точками, через которые проходит первая прямая.

Координаты каждой точки - целые числа, по модулю не превышающие 1000.

Формат результата
Если прямые не пересекаются, выведите одно число 0. Если прямые совпадают, выведите 2. Если прямые пересекаются ровно в одной точке, то выведите сначала число 1, а затем два вещественных числа - координаты точки пересечения с точностью до шести знаков после запятой.

Примеры
Входные данные
1 1 2 2
1 10 2 11
Результат работы
0
Входные данные
0 0 1 1
1 0 -1 2
Результат работы
1 0.5 0.5
*/