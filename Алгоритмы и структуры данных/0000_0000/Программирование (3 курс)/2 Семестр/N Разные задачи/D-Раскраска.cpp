#define _CRT_SECURE_NO_WARNINGS 
#include <iostream>
#include <cstdlib>
#include <stdio.h> 
#include <math.h>
#include <iomanip> 
#include <fstream> 
#include <cstring>
using namespace std;


int main() {
	ifstream fin("paint.dat");
	ofstream fout("paint.sol");
	int a, b, t, t2;
	int A[100000], B[100000], osn = 10000, sizeA;
	memset(A, 0, sizeof(A));
	memset(B, 0, sizeof(B));
	fin >> a >> b;
	//scanf("%d%d", &a, &b);
	A[0] = 1;
	sizeA = A[0];
	t = a * (a - 1) * (a - 2) * (a - 3);
	if (b > 1) {
		t2 = t - 1;
		A[1] = t2;
		for (int i = 0; i < b - 2; i++) { //?????????? t2 ? ??????? b-1;
			for (int j = 1; j <= sizeA; j++) {
				B[j + 1] = (A[j] * t2 + B[j]) / osn;
				B[j] = (A[j] * t2 + B[j]) % osn;
				B[0] = sizeA;
				if (B[sizeA + 1] != 0) {
					sizeA++;
				}
			}
			for (int j = 0; j <= sizeA; j++) {
				A[j] = B[j];
			}
			//t2 = mult(t - 1, t2);
			memset(B, 0, sizeof(B));
		}

		for (int j = 1; j <= sizeA; j++) { //????????? ?? t
			B[j + 1] = (A[j] * t + B[j]) / osn;
			B[j] = (A[j] * t + B[j]) % osn;
			B[0] = sizeA;
			if (B[sizeA + 1] != 0) {
				sizeA++;
			}
		}
		for (int j = 0; j <= sizeA; j++) {
			A[j] = B[j];
		}

		fout << A[sizeA];
		//printf("%d", A[sizeA]);
		for (int j = sizeA - 1; j > 0; j--) {
			fout << setw(4) << setfill('0') << A[j];
			//printf("%04d", A[j]);
		}
		//printf("%d", mult(t, t2));
	}
	else {
		fout << t;
		//printf("%d", t);
	}
	//fin >> a >> b;
	//fout << "YES";
	//system("pause");
	return 0;
}
/*
… Спал Урфин долго, проснулся только к вечеру и отправился проверять караулы.

Его удивило неожиданное зрелище. Генерал, капралы и солдаты были на своих постах, но все они прикрывались большими зелеными листьями и ветками.

– В чем дело? – резко спросил Урфин Джюс. – Что с вами со всеми случилось?

– Нам стыдно, – смущенно ответил Лан Пирот. – Мы – голые.

– Вот еще новости! – сердито закричал Урфин. – Вы – деревянные!

– Но мы же люди, повелитель, вы сами говорили об этом, – возразил Лан Пирот. – Люди носят одежду… и они нас дразнят.

– Не было печали! Дам я вам одежду!

Деревянное воинство так обрадовалось, что трижды прокричало «ура» в честь Урфина Джюса.

Отпустив свою армию, Урфин призадумался: легко было обещать одежду пятидесяти шести деревянным воинам, но где ее взять? В деревушке, конечно, не найдется столько материи для мундиров, кожи для сапог и ремней, да и мастеров нет, чтобы выполнить такую большую работу.

Урфин рассказал о своем затруднении филину. Гуамоко поводил по сторонам большими желтыми глазами и бросил одно лишь слово.

– Краска!

Это слово все осветило Урфину. В самом деле: зачем одевать деревянные тела, которые не нуждаются в защите от холода, когда можно их просто раскрасить?...

Итак, Урфин Джюс построил N своих солдат в одну шеренгу, и начал их красить. В его распоряжении есть K красок. Урфин должен нарисовать каждому дуболому ровно 4 детали одежды - мундир, ремень, штаны и сапоги, причем все эти 4 детали у одного дуболома должны быть разного цвета. То есть, на раскраску одного дуболома идет ровно 4 цвета из К имеющихся. Кроме того, Урфин не хочет, чтобы два рядом стоящих дуболома были раскрашены одинаково (дуболомы считаются раскрашенными по-разному, если у них хотя бы одна деталь одежды отличается по цвету).

Каким количеством способов Урфин Джюс может раскрасить шеренгу из N дуболомов так, чтобы никакие два одинаково расскрашенных дуболома не стояли рядом и выполнялись сформулированные выше условия раскраски одного дуболома.

Формат входного файла paint.dat
Текстовый файл paint.dat содержит два натуральных числа, разделенных пробелом — количество имеющихся красок K (4 ? K ? 10) и количество дуболомов в шеренге N (1 ? N ? 56).

Формат выходного файла paint.sol
Текстовый файл paint.sol должен содержать единственное число — количество способов раскраски дуболомов.
*/