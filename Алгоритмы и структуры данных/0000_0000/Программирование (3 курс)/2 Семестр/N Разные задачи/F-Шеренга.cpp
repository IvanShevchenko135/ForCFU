#define _CRT_SECURE_NO_WARNINGS 
#include <iostream>
#include <cstdlib>
#include <stdio.h> 
#include <math.h>
#include <iomanip> 
#include <fstream> 
using namespace std;

int n, dub[10000];
int temp;
int main() {
	ifstream fin("numb.dat");
	ofstream fout("numb.sol");
	fin >> n;
	//scanf("%d", &n);
	for (int i = 0; i < n; i++) {
		fin >> temp;
		//scanf("%d", &temp);
		dub[temp]++;
	}

	int max = 0;
	for (int i = 1; i < 10000; i++) {
		if (dub[i] > dub[max]) {
			max = i;
		}
	}
	fout << max;
	//printf("%d", max);
	//system("pause");

	return 0;
}

/*
Сдать решение задачи F-Шеренга
Имя входного файла:	numb.dat
Имя выходного файла:	numb.sol
Ограничение времени:	1 с
Ограничение реального времени:	60 с
Ограничение памяти:	64M
Задача F: Шеренга
DOC-file

После раскраски своего деревянного войска Урфин Джюс присвоил каждому солдату номер, чтобы капралы могли их различать. Но Урфин умеет считать только до 1000, а солдат в его армии намного больше, поэтому некоторые солдаты имеют одинаковые номера.

Капрал Арум построил N дуболомов в одну шеренгу. Каждый дуболом имеет некоторый номер. Помогите Аруму определить номер, встречающийся в этой шеренге максимальное количество раз.

Формат входного файла numb.dat
Текстовый файл numb.dat содержит две строки. В первой строке записано натуральное число N (1 ? N ? 100 000) — количество дуболомов в шеренге.

Вторая строка содержит N натуральных чисел, разделенных пробелами — номера дуболомов в шеренге. Каждый номер лежит в диапазоне от 1 до 1000.

Формат выходного файла numb.sol
Текстовый файл numb.sol должен содержать единственное целое число — номер, встречающийся в шеренге дуболомов максимальное число раз. Если таких номеров несколько, выведите минимальный из них.
*/