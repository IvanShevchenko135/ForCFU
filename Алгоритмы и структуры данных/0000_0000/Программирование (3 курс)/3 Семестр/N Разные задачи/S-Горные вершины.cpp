#define _CRT_SECURE_NO_WARNINGS 
#include <iostream>
#include <cstdlib>
#include <stdio.h>
#include <string>
#include <set>
#include <fstream>
#include <algorithm>
#include <math.h>
#include <map>
#include <queue>
using namespace std;

int n, k, a, b, d;
int g[51][51], u[51];

int dfs(int x, int step)
{
	u[x] = 1;
	int sum = 0;
	if (x == b && step <= d){
		u[x] = 0;
		return 1;
	}

	for (int i = 1; i <= n; i++){
		if (g[x][i] && !u[i]) sum += dfs(i, step + 1);
	}
	u[x] = 0;
	return sum;
}

int main()
{
	int T;
	scanf("%d", &T);
	while (T--)
	{
		int x, y;
		scanf("%d%d%d%d%d", &n, &k, &a, &b, &d);
		for (int i = 0; i <= n; i++) {
			for (int j = 0; j <= n; j++) {
				g[i][j] = 0;
			}
		}
		for (int i = 0; i < k; i++)
		{
			scanf("%d%d", &x, &y);
			g[x][y] = 1;
		}
		printf("%d\n", dfs(a, 0));
	}
	return 0;
}

/*
Задача S: Горные вершины

Горный туристический комплекс состоит из N турбаз, соединенных между собой K горными переходами (другие маршруты в горах опасны). Любой переход между двумя базами занимает 1 день. Туристическая группа находится на базе A и собирается попасть на базу B не более чем за D дней. Сколько существует разных таких маршрутов (без циклов) между A и B?

Input
Первая строка стандартного потока ввода содержит количество тестовых случаев Т.

Каждый тестовый случай состоит из нескольких строк.

В первой строке через пробел записаны числа N, K, A, B, D. Каждая из следующих K строк содержит пару чисел, которая описывает возможный горный переход. Все числовые значения натуральные. (N ≤ 50, D ≤ 10).

Output
Для каждого тестового случая выведите в отдельной строке одно число - количество маршрутов.

Примеры
Входные данные
1
5 8 2 5 3
1 2
1 3
1 5
2 1
2 4
3 4
3 5
4 1
Результат работы
3
*/